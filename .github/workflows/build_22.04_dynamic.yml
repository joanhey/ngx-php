name: Build dynamic 22.04

on:
  workflow_call:

env:
  DB_DATABASE: ngx_php
  DB_USER: ngx_php
  DB_PASSWORD: ngx_php

jobs:
  build:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        php_version: ["7.4", "8.0", "8.1", "8.2", "8.3", "8.4"] # "7.0", "7.1", "7.2", "7.3",
        # Only nginx stable and mainline versions for faster tests
        nginx_version: [ "1.25.5", "1.26.0", "1.27.3" ]
        # Disable fail-fast to allow all failing versions to fail in a
        # single build, rather than stopping when the first one fails.
      fail-fast: false

    name: Dynamic PHP-${{ matrix.php_version }} Nginx ${{ matrix.nginx_version }}

    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo apt-get install -yqq cpanminus libxml2-dev systemtap-sdt-dev zlib1g-dev libpcre3-dev libargon2-0-dev libsodium-dev libkrb5-dev

      - name: Setup PHP-${{ matrix.php_version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_version }}
          extensions: dev, embed, opcache, mysql
          ini-values: opcache.enable=1, opcache.enable_cli=1, opcache.jit=tracing, opcache.jit_buffer_size=128M,error_reporting=E_ALL
          coverage: none

      - name: Download Nginx v${{ matrix.nginx_version }}
        run: |
          wget http://nginx.org/download/nginx-${{ matrix.nginx_version }}.tar.gz
          tar -zxf nginx-${{ matrix.nginx_version }}.tar.gz

      - name: Compile Ngx-php
        env:
          PHP_SRC_VERSION: ${{ matrix.php_version }}
          NGINX_SRC_VERSION: ${{ matrix.nginx_version }}
          NGINX_MODULE: "DYNAMIC"
        run: ./.github/ngx-php/compile-ngx.sh

      - name: MySQL Start and create table
        run: |
          sudo systemctl start mysql.service
          mysql -uroot -proot -e 'CREATE DATABASE ${{ env.DB_DATABASE }};'
          mysql -uroot -proot < .github/ngx-php/world.sql

      - name: Install Redis & Memcached
        run: |
          sudo apt-get install -y redis-server redis-tools memcached
          sudo redis-server /etc/redis/redis.conf

      - name: Perl packages
        run: sudo cpanm -n Test::Nginx

      - name: Test
        env:
          PHP_SRC_VERSION: ${{ matrix.php_version }}
        run: |
          sudo bash -c "echo "opcache.jit=tracing" >> /etc/php/${PHP_SRC_VERSION}/embed/conf.d/10-opcache.ini"
          ./.github/ngx-php/test.sh
